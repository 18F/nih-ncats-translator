version: 2.1

commands:
  checkout-and-install:
    description: "Checkout code and install dependencies using a cache"
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm ci --dev
      - save_cache:
          key: dependency-cache-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

jobs:
  test:
    docker:
      - image: node:10
    steps:
      - checkout-and-install
      - run:
          name: Run tests
          command: npm test -- --reporters=default --reporters=jest-junit
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
          destination: reports

  coverage:
    docker:
      - image: node:10
    steps:
      - checkout-and-install
      - run:
          name: Generate code coverage reports
          command: npm test -- --coverage
      - store_artifacts:
          path: coverage
          destination: coverage

  lint:
    docker:
      - image: node:10
    steps:
      - checkout-and-install
      - run:
          name: Run code linters
          command: npm run lint

  build:
    docker:
      - image: node:10
    environment:
      NODE_ENV: production
    steps:
      - checkout-and-install
      - run:
          name: Run production build
          command: npm run build
      - store_artifacts:
          path: build
          destination: build
      - persist_to_workspace:
          root: ./
          paths:
            - build

  deploy:
    docker:
      - image: node:10
    environment:
      CF_ORG: ncats-prototyping
      CF_SPACE: Informatics
      CF_APP: nih-ncats-translator-prototype
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Setup Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
            dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.fr.cloud.gov
            cf auth "$CF_USERNAME" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"
      - run:
          name: Setup Autopilot Cloud Foundry CLI plugin
          command: |
            curl -v -L -o autopilot-linux "https://github.com/contraband/autopilot/releases/download/0.0.8/autopilot-linux"
            cf install-plugin -f autopilot-linux
      - run:
          name: Perform zero-downtime deployment (zero-downtime-push)
          command: |
            cf zero-downtime-push "$CF_APP" -f manifest.yml

workflows:
  version: 2
  built-test-deploy:
    jobs:
      - build
      - test
      - lint
      - coverage
      - deploy:
          requires:
            - build
            - test
            - lint
            - coverage
          filters:
            branches:
              only:
                - master
